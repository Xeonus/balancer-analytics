
query GetProtocolData($startTimestamp: Int!, $block24: Block_height!, $block48: Block_height!) {
    balancers(first: 1) {
        totalLiquidity
        totalSwapCount
        totalSwapFee
        totalSwapVolume
        poolCount
    }
    balancers24: balancers(first: 1, block: $block24) {
        totalLiquidity
        totalSwapCount
        totalSwapFee
        totalSwapVolume
        poolCount
    }
    balancers48: balancers(first: 1, block: $block48) {
        totalLiquidity
        totalSwapCount
        totalSwapFee
        totalSwapVolume
        poolCount
    }
    balancerSnapshots(
        first: 1000
        orderBy: timestamp
        orderDirection: asc
        where: {timestamp_gte: $startTimestamp}
    ) {
        ...BalancerSnapshot
    }
    whaleSwaps: swaps(first: 100, orderBy: timestamp, orderDirection: desc, where: {valueUSD_gte: "10000"}) {
        ...BalancerSwap
    }
}

query GetTokenData($block24: Block_height!, $first: Int!) {
    tokens: tokens(
        first: $first
        orderBy: totalBalanceUSD
        orderDirection: desc
    ) {
        ...BalancerToken
    }
    tokens24: tokens(
        first: $first
        orderBy: totalBalanceUSD
        orderDirection: desc,
        block: $block24
    ) {
        ...BalancerToken
    }
}

query GetTokenSingleData($address: String!, $block24: Block_height!) {
    tokens: tokens(
        orderBy: totalBalanceUSD
        orderDirection: desc
        where: {address : $address}
    ) {
        ...BalancerToken
    }
    tokens24: tokens(
        orderBy: totalBalanceUSD
        orderDirection: desc,
        block: $block24
        where: {address : $address}
    ) {
        ...BalancerToken
    }
}

query GetTokenPageData($address: String!, $startTimestamp: Int!) {
    tokenSnapshots(first: 500, orderBy: timestamp, orderDirection: asc, where: {token: $address, timestamp_gte: $startTimestamp}) {
        ...TokenSnapshot
    }
}

query GetTransactionData($addresses: [Bytes!]!, $poolIds: [String!]!, $startTimestamp: Int!) {
    swapsIn: swaps(first: 500, orderBy: timestamp, orderDirection: desc, where: {tokenIn_in: $addresses, poolId_in: $poolIds, timestamp_gte: $startTimestamp}) {
        ...BalancerSwap
    }
    swapsOut: swaps(first: 500, orderBy: timestamp, orderDirection: desc, where: {tokenOut_in: $addresses, poolId_in: $poolIds, timestamp_gte: $startTimestamp}) {
        ...BalancerSwap
    }
    joinExits(first: 150, orderBy: timestamp, orderDirection: desc, where: {pool_in: $poolIds, timestamp_gte: $startTimestamp}) {
        ...BalancerJoinExit
    }
}

fragment TokenSnapshot on TokenSnapshot {
    id
    timestamp
    totalBalanceUSD
    totalBalanceNotional
    totalVolumeUSD
    totalVolumeNotional
    totalSwapCount
}

query GetPoolData($block24: Block_height!, $first: Int!) {
    pools(
        first: $first
        orderBy: totalLiquidity
        orderDirection: desc
    ) {
        ...BalancerPool
    }
    pools24: pools(
        first: $first
        orderBy: totalLiquidity
        orderDirection: desc,
        block: $block24
    ) {
        ...BalancerPool
    }
}

query GetUserWalletPoolData($userAddress: String!, $block: Int!) {
    poolShares(block: {number: $block}, first: 1000, where: {userAddress: $userAddress, balance_gt: 0}) {
    balance
    poolId {
      id
      totalLiquidity,
      totalShares
    }
  }
}

query GetPoolChartData($poolId: String!, $startTimestamp: Int!) {
    poolSnapshots(first: 1000, orderBy: timestamp, orderDirection: asc, where: {pool: $poolId, timestamp_gte: $startTimestamp}) {
        id
        amounts
        swapVolume
        swapFees
        timestamp
        swapsCount
        holdersCount
        pool {
            id
            tokens {
              address
              balance
            }
        }
    }
}

query BalancerPoolSwapFeeSnapshot($startTimestamp: Int!, $endTimeStamp: Int!) {
        poolSnapshots(
            first: 1000
            orderBy: swapFees
            orderDirection: desc
            where: { timestamp_in: [$startTimestamp, $endTimeStamp] }
        ) {
           id
        amounts
        totalShares
        swapVolume
        swapFees
        timestamp
        swapsCount
        holdersCount
        pool {
            id
        }
        }
}

fragment LatestPrice on LatestPrice {
    asset
    pricingAsset
    price
    poolId {
        id
    }
}

query BalancerProtocolData(
    $skip: Int
    $first: Int
    $orderBy: Balancer_orderBy
    $orderDirection: OrderDirection
    $where: Balancer_filter
    $block: Block_height
) {
    balancers(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        id
        totalLiquidity
        totalSwapVolume
        totalSwapFee
        poolCount
        totalSwapCount
    }
}

query BalancerUser($id: ID!, $block: Block_height) {
    user(id: $id, block: $block) {
        ...User
    }
}

query BalancerUsers(
    $skip: Int
    $first: Int
    $orderBy: User_orderBy
    $orderDirection: OrderDirection
    $where: User_filter
    $block: Block_height
) {
    users(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...User
    }
}

fragment User on User {
    id
    sharesOwned(first: 1000) {
        balance
        poolId {
            id
        }
    }
}

query BalancerTokenPrices(
    $skip: Int
    $first: Int
    $orderBy: TokenPrice_orderBy
    $orderDirection: OrderDirection
    $where: TokenPrice_filter
    $block: Block_height
) {
    tokenPrices(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...BalancerTokenPrice
    }
}

query BalancerChartTokenPrices(
    $asset: Bytes!
) {
    prices1: tokenPrices(
        skip: 0
        first: 1000
        orderBy: timestamp
        orderDirection: desc
        where: { asset: $asset }
    ) {
        ...BalancerChartTokenPrice
    }
    prices2: tokenPrices(
        skip: 1000
        first: 1000
        orderBy: timestamp
        orderDirection: desc
        where: { asset: $asset }
    ) {
        ...BalancerChartTokenPrice
    }
    prices3: tokenPrices(
        skip: 2000
        first: 1000
        orderBy: timestamp
        orderDirection: desc
        where: { asset: $asset }
    ) {
        ...BalancerChartTokenPrice
    }
    prices4: tokenPrices(
        skip: 3000
        first: 1000
        orderBy: timestamp
        orderDirection: desc
        where: { asset: $asset }
    ) {
        ...BalancerChartTokenPrice
    }
    prices5: tokenPrices(
        skip: 4000
        first: 1000
        orderBy: timestamp
        orderDirection: desc
        where: { asset: $asset }
    ) {
        ...BalancerChartTokenPrice
    }
    prices6: tokenPrices(
        skip: 5000
        first: 1000
        orderBy: timestamp
        orderDirection: desc
        where: { asset: $asset }
    ) {
        ...BalancerChartTokenPrice
    }
}

fragment BalancerChartTokenPrice on TokenPrice {
    id
    timestamp
    price
    amount
}

fragment BalancerTokenPrice on TokenPrice {
    id
    poolId {
        id
    }
    asset
    amount
    pricingAsset
    price
    block
    timestamp
}

fragment BalancerPool on Pool {
    id
    address
    poolType
    symbol
    name
    swapFee
    totalWeight
    totalSwapVolume
    totalSwapFee
    totalLiquidity
    totalShares
    swapsCount
    holdersCount
    createTime
    owner
    amp
    factory
    strategyType
    swapEnabled
    tokens(first: 10) {
        ...BalancerPoolToken
    }
}

fragment BalancerPoolToken on PoolToken {
    id
    symbol
    name
    decimals
    address
    balance
    weight
    priceRate
    poolId {
        id
        address
    }
}

query GetBalancerPools(
    $skip: Int
    $first: Int
    $orderBy: Pool_orderBy
    $orderDirection: OrderDirection
    $where: Pool_filter
    $block: Block_height
) {
    pools(skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block) {
        ...BalancerPool
    }
}

query GetBalancerPool($id: ID!, $block24: Block_height) {
    pool(id: $id){
        ...BalancerPool
    }
    pool24: pool(id: $id, block: $block24) {
        ...BalancerPool
    }
}

query BalancerPoolTokens(
    $skip: Int
    $first: Int
    $orderBy: PoolToken_orderBy
    $orderDirection: OrderDirection
    $where: PoolToken_filter
    $block: Block_height
) {
    poolTokens(skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block) {
        ...BalancerPoolToken
    }
}

query BalancerPoolHistoricalLiquidities(
    $skip: Int
    $first: Int
    $orderBy: PoolHistoricalLiquidity_orderBy
    $orderDirection: OrderDirection
    $where: PoolHistoricalLiquidity_filter
    $block: Block_height
) {
    poolHistoricalLiquidities(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        id
        poolId {
            id
        }
        poolTotalShares
        poolLiquidity
        poolShareValue
        pricingAsset
        block
    }
}

query BalancerPoolSnapshots(
    $skip: Int
    $first: Int
    $orderBy: PoolSnapshot_orderBy
    $orderDirection: OrderDirection
    $where: PoolSnapshot_filter
    $block: Block_height
) {
    poolSnapshots(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...BalancerPoolSnapshot
    }
}

fragment BalancerPoolSnapshot on PoolSnapshot {
    id
    pool {
        id
    }
    totalShares
    swapVolume
    swapFees
    timestamp
}

query BalancerLatestPrices(
    $skip: Int
    $first: Int
    $orderBy: LatestPrice_orderBy
    $orderDirection: OrderDirection
    $where: LatestPrice_filter
    $block: Block_height
) {
    latestPrices(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        id
        asset
        price
        poolId {
            id
        }
        pricingAsset
    }
}

query BalancerJoinExits(
    $skip: Int
    $first: Int
    $orderBy: JoinExit_orderBy
    $orderDirection: OrderDirection
    $where: JoinExit_filter
    $block: Block_height
) {
    joinExits(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...BalancerJoinExit
    }
}

fragment BalancerJoinExit on JoinExit {
    amounts
    valueUSD
    id
    sender
    timestamp
    tx
    type
    pool {
        id
        tokensList
    }
}

query BalancePortfolioData($id: ID!, $previousBlockNumber: Int!) {
    user(id: $id) {
        ...User
    }
    pools(first: 1000, where: {totalShares_gt: "0"}) {
        ...BalancerPool
    }

    previousUser: user(id: $id, block: {number: $previousBlockNumber}) {
        ...User
    }
    previousPools: pools(first: 1000, where: {totalShares_gt: "0"}, block: {number: $previousBlockNumber}) {
        ...BalancerPool
    }
}


query BalancerSwaps(
    $skip: Int
    $first: Int
    $orderBy: Swap_orderBy
    $orderDirection: OrderDirection
    $where: Swap_filter
    $block: Block_height
) {
    swaps(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...BalancerSwap
    }
}

fragment BalancerSwap on Swap {
    id
    caller
    tokenIn
    tokenInSym
    tokenOut
    tokenOutSym
    tokenAmountIn
    tokenAmountOut
    valueUSD
    poolId {
        id
        name
        address
        swapFee
    }
    userAddress {
        id
    }
    timestamp
    tx
}


query GetBalancerTokens(
    $skip: Int
    $first: Int
    $orderBy: Token_orderBy
    $orderDirection: OrderDirection
    $where: Token_filter
    $block: Block_height
) {
    tokens(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...BalancerToken
    }
}

fragment BalancerToken on Token {
    id
    address
    decimals
    name
    symbol
    totalBalanceUSD
    totalBalanceNotional
    totalVolumeUSD
    totalVolumeNotional
    totalSwapCount
    latestUSDPrice
}


query BalancerTradePairs(
    $skip: Int
    $first: Int
    $orderBy: TradePair_orderBy
    $orderDirection: OrderDirection
    $where: TradePair_filter
    $block: Block_height
) {
    tradePairs(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...BalancerTradePair
    }
}

fragment BalancerTradePair on TradePair {
    id
    token0 {
        ...BalancerToken
    }
    token1  {
        ...BalancerToken
    }
    totalSwapVolume
    totalSwapFee
}

query GetBalancerSnapshots(
    $skip: Int
    $first: Int
    $orderBy: BalancerSnapshot_orderBy
    $orderDirection: OrderDirection
    $where: BalancerSnapshot_filter
    $block: Block_height
) {
    balancerSnapshots(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...BalancerSnapshot
    }
}

fragment BalancerSnapshot on BalancerSnapshot {
    id
    timestamp
    poolCount
    totalLiquidity
    totalSwapCount
    totalSwapVolume
    totalSwapFee
}


query GetLatestPrices(
    $skip: Int
    $first: Int
    $orderBy: LatestPrice_orderBy
    $orderDirection: OrderDirection
    $where: LatestPrice_filter
    $block: Block_height
) {
    latestPrices(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...LatestPrice
    }
}